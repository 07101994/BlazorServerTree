@using BlazorServerTree.App.Services
@using BlazorServerTree.App.UIHelpers
@using System.Linq
@using System.Collections.Generic

@page "/tree"
@inject TreeDataService TreeService

<h1>Sample Tree</h1>

<p>Tree</p>

@if (uiNodes == null)
{
    <p><em>Loading...</em></p>
}
else
{

    <div class="input-group mb-3">
    <div class="input-group-prepend">
        <span class="input-group-text" id="basic-addon1">Selected Item</span>
    </div>
    <input type="text" class="form-control" 
           aria-label="SelectedText" aria-describedby="basic-addon1" 
           value="@selectedText" />
    </div>

    <UITreeNodeComponent uiNodes=@uiNodes
                         Select=@OnSelect
                         LoadNodes=@LoadNodes
                         >
    </UITreeNodeComponent>  

}

@functions {
    List<UITreeNode> uiNodes;
    private string selectedText {get; set;} = "";

    private void OnSelect(UIMouseEventArgs e, int? Id ) {
        System.Console.WriteLine("Seleccionat " + Id);
        if (Id != null ){
            selectedText = (uiNodes.Where(x=>x.Id == Id).Select(x=>x.Text).FirstOrDefault());
        } else {
            selectedText = "No selection";
        }
        StateHasChanged();
    }

    protected override async Task OnInitAsync()
    {
        uiNodes = await LoadNodes();
        uiNodes = UITreeHelper.ReArrange( uiNodes );
    }

    private async Task<List<UITreeNode>> LoadNodes(int? ParentId = null)
    {
        //Load tree from 'database'
        TreeNode[] newNodes = await TreeService.GetNodesAsync(ParentId);
        //Transform 'database' data to 'UI' data
        List<UITreeNode> uiNewNodes = newNodes
                                      .Where(x=>x.ParentId==ParentId)
                                      .Select( x=>new UITreeNode { ParentId=x.ParentId, Id=x.Id, Text=x.Label  } )
                                      .ToList();
        //todo: avoid to dup the list in both sides ( component and here )
        
        return uiNewNodes;
    }





}