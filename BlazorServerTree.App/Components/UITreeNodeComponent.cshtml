@using BlazorServerTree.App.UIHelpers
@using System.Collections.Generic

    <ul class="list-group">

        @foreach (var node in uiNodes.Where(x=>x.IsVisible))
        {

            <li id="tree-@node.Id" 
                class="list-group-item @node.IsSelected_display" 
                onclick="@((e) => TreeSelect(e, @node.Id ))"
            >
                    @for(int d=0; d<@node.Deep; d++) {
                        <span class="p-2"></span>
                    }
                    <span class="@node.IsExpanded_display" 
                          onclick="@(async (e) => await TreeExpand(e, @node.Id ))"
                    >
                    </span>
                    @node.Text
            </li>
        }
    </ul>


@functions {

#pragma warning disable BL9993, CS4014 // Component parameter is marked public


    [Parameter]
    public List<UITreeNode> uiNodes { get; set; }

    [Parameter]
    public Action<UIMouseEventArgs,int?> Select { get; protected set; }    

    [Parameter]
    public Func<int?, Task<List<UITreeNode>>> LoadNodes { get; protected set; }    

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    // --------------------------- //

    protected void TreeSelect(UIMouseEventArgs e,  int Id )
    {
        int? selectedId=null;
        foreach( UITreeNode node in uiNodes) {
            node.IsSelected = (node.Id == Id && !node.IsSelected);
            if (node.IsSelected) {
                selectedId = node.Id;
            }
        }
        fixup();
        Select(e, selectedId);
    }

    private async Task TreeExpand(UIMouseEventArgs e,  int Id ) {
        UITreeNode n = uiNodes.Where(x=>x.Id == Id).First();
        n.IsExpanded = !n.IsExpanded;
        if (n.IsExpanded && !n.ChildrenLoaded) {
            n.ChildrenLoaded = true;
            List<UITreeNode> uiNewNodes = await LoadNodes(Id);
            uiNodes = (uiNodes == null)? uiNewNodes : uiNewNodes.Concat( uiNodes ).ToList();
        }
        fixup();        
    }

    private void fixup() {
        uiNodes = UITreeHelper.ReArrange( uiNodes );
        StateHasChanged();
    }

#pragma warning restore BL9993, CS4014 // Component parameter is marked public


}